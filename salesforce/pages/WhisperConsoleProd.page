<apex:page >
    <apex:includeScript value="/support/console/41.0/integration.js"/>
    
    <script type="text/javascript">
        var timeSend = null;
        const SUGGESTION_ENDPOINT = 'https://whisper-dev.us-east-1.elasticbeanstalk.com/whisper/suggestions';
    
         var messageType = {
            'Chasitor': 0,
            'Agent': 1
        };
        var sentMessage = {};
        var chatStartedHandler = function(result) {
            let chatKey = result.chatKey;
            sforce.console.chat.onNewMessage(chatKey, (result) => onNewMessageHandler(result, chatKey));       
        }

        sforce.console.chat.onChatStarted(chatStartedHandler);

        var onNewMessageHandler = function (result, chatKey) {
            timeSend = performance.now();
            document.getElementById('suggestionSection').innerHTML = '';
            let querry = (result.type == 'Chasitor') ?  result.content : sentMessage.url || result.content;

            let data = {
                chatkey: chatKey,
                Querry: querry,
                type: messageType[result.type]
            };
            let headers = {
                "Content-Type": "application/json"
            };
            fetch( SUGGESTION_ENDPOINT, { method: "POST", body: JSON.stringify(data),  headers: headers })
                .then(data => data.json())
                .then(json =>  createAllButtons(json, chatKey))
                .catch( error =>  console.log('Invalid URL, there is no response. Error: ' + error));
            
        }

        function setAgentInputSuccess(result) {
            if (!result.success) {
                console.log(result)
            } 
        }

        function createAllButtons(json, chatKey) {
            json.forEach( (element) => {    
                createButton(element, chatKey);
            });
            console.log("Execution time: " + (performance.now() - timeSend).toString());
        }

        function createButton(json, chatKey) {
            let openDiv = '<div class="suggestion" onclick="chooseSuggestionClick(this, \'' +  chatKey + '\')">';
            let openContent = '<div class="content">'
            let from = '<p class="suggestionFrom"><b>From</b> Your assistant Whisper</p>';
            let recommend = '<div><b>I Recommand this answer</b></div>';
            let sentence = '<div class="sentence">' + json.title + '</div>';
            let url = '<a class="url" href="' + json.uri + '">' + json.uri + '</a>';
            let closeContent = '</div>';
            let closeDiv = '</div>';
            document.getElementById('suggestionSection').innerHTML += 
                openDiv + openContent + from + recommend + sentence + url + closeContent +closeDiv;
        }

        function chooseSuggestionClick(html, chatKey) {
            sentMessage.sentence = html.getElementsByClassName('sentence')[0].innerText;
            sentMessage.url = html.getElementsByClassName('url')[0].innerText;   
            setAgentInput(sentMessage,chatKey);
        }

        function setAgentInput(sentMessage, chatKey) {
            let msg = sentMessage.sentence + ' ' + sentMessage.url;
            sforce.console.chat.setAgentInput(chatKey, msg, setAgentInputSuccess);
        } 

    </script>
    <style>
        body {
            margin: 0px !important;
        }
        #whisperHeader {
            background-color:#4388CC;
        }
        #whisperTitle {
            color:#fff;
            text-align: center;
            font-size: 1.2em;
            padding: 6px 0;
            font-weight: bold;
        }
        #suggestionSection a {
            text-decoration: none;
            color :#2f8fe4;
        }
        .suggestion .content {
            padding-bottom: 8px;
            border-bottom: 1px solid #444;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        .suggestion .sentence {
            margin-bottom: 8px;
        }
        .suggestion:hover {
            cursor: pointer;
            background-color: #eee;
        }
        #suggestionSection .suggestion { 
            padding: 0 15px;
        }
        #suggestionSection .suggestionFrom:not(b) {
            color: #2f8fe4;
        }
        #suggestionSection b {
            color: #000;
        }
    </style>
    <div id="whisperWrapper">
        <div id="whisperHeader">
            <div id="whisperTitle">
                Whisper
            </div> 
        </div>
        <div id="suggestionSection">
        </div>
    </div>
</apex:page>